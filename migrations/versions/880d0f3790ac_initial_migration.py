"""Initial migration

Revision ID: 880d0f3790ac
Revises: 
Create Date: 2025-09-20 15:00:21.187384

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '880d0f3790ac'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('service_categories',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_service_categories_name'), 'service_categories', ['name'], unique=True)
    op.create_table('users',
    sa.Column('full_name', sa.String(length=120), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('phone_number', sa.String(length=32), nullable=True),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('role', sa.Enum('customer', 'artisan', 'admin', name='user_role'), nullable=False),
    sa.Column('nin', sa.String(length=20), nullable=True),
    sa.Column('location', sa.String(length=255), nullable=True),
    sa.Column('service_preferences', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_blocked', sa.Boolean(), nullable=False),
    sa.Column('email_verified', sa.Boolean(), nullable=False),
    sa.Column('phone_verified', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_phone_number'), 'users', ['phone_number'], unique=True)
    op.create_index(op.f('ix_users_role'), 'users', ['role'], unique=False)
    op.create_table('announcements',
    sa.Column('title', sa.String(length=140), nullable=False),
    sa.Column('message', sa.String(length=1000), nullable=False),
    sa.Column('created_by_admin_id', sa.UUID(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['created_by_admin_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('artisan_profiles',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('service_category', sa.String(length=100), nullable=False),
    sa.Column('service_description', sa.String(length=500), nullable=True),
    sa.Column('years_of_experience', sa.Integer(), nullable=False),
    sa.Column('work_hours', sa.String(length=120), nullable=True),
    sa.Column('service_location', sa.String(length=120), nullable=True),
    sa.Column('bank_name', sa.String(length=80), nullable=True),
    sa.Column('account_number', sa.String(length=20), nullable=True),
    sa.Column('account_name', sa.String(length=120), nullable=True),
    sa.Column('verification_status', sa.Enum('pending', 'verified', 'rejected', name='verification_status'), nullable=False),
    sa.Column('rejection_reason', sa.String(length=255), nullable=True),
    sa.Column('verified_by_admin_id', sa.UUID(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['verified_by_admin_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_artisan_profiles_service_category'), 'artisan_profiles', ['service_category'], unique=False)
    op.create_index(op.f('ix_artisan_profiles_user_id'), 'artisan_profiles', ['user_id'], unique=True)
    op.create_index(op.f('ix_artisan_profiles_verification_status'), 'artisan_profiles', ['verification_status'], unique=False)
    op.create_table('email_phone_tokens',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('purpose', sa.Enum('refresh', 'email_verify', 'phone_verify', 'password_reset', name='token_purpose'), nullable=False),
    sa.Column('token_hash', sa.String(length=255), nullable=False),
    sa.Column('target', sa.String(length=255), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('used', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'purpose', 'target', name='uq_email_phone_token_per_target')
    )
    op.create_index(op.f('ix_email_phone_tokens_purpose'), 'email_phone_tokens', ['purpose'], unique=False)
    op.create_index(op.f('ix_email_phone_tokens_user_id'), 'email_phone_tokens', ['user_id'], unique=False)
    op.create_table('idempotency_keys',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('scope', sa.String(length=64), nullable=False),
    sa.Column('key', sa.String(length=128), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'scope', 'key', name='uq_idem_user_scope_key')
    )
    op.create_index(op.f('ix_idempotency_keys_scope'), 'idempotency_keys', ['scope'], unique=False)
    op.create_index(op.f('ix_idempotency_keys_user_id'), 'idempotency_keys', ['user_id'], unique=False)
    op.create_table('jobs',
    sa.Column('job_number', sa.Integer(), sa.Identity(always=False, start=1000), nullable=False),
    sa.Column('customer_id', sa.UUID(), nullable=False),
    sa.Column('artisan_id', sa.UUID(), nullable=False),
    sa.Column('service_category', sa.String(length=100), nullable=False),
    sa.Column('location', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('scheduled_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('status', sa.Enum('pending', 'accepted', 'on_the_way', 'working', 'completed', 'cancelled', name='job_status'), nullable=False),
    sa.Column('meta', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['artisan_id'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['customer_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_jobs_artisan_id'), 'jobs', ['artisan_id'], unique=False)
    op.create_index('ix_jobs_artisan_status', 'jobs', ['artisan_id', 'status'], unique=False)
    op.create_index(op.f('ix_jobs_customer_id'), 'jobs', ['customer_id'], unique=False)
    op.create_index('ix_jobs_customer_status', 'jobs', ['customer_id', 'status'], unique=False)
    op.create_index(op.f('ix_jobs_job_number'), 'jobs', ['job_number'], unique=True)
    op.create_index(op.f('ix_jobs_service_category'), 'jobs', ['service_category'], unique=False)
    op.create_index(op.f('ix_jobs_status'), 'jobs', ['status'], unique=False)
    op.create_table('refresh_tokens',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('jti', sa.String(length=64), nullable=False),
    sa.Column('token_hash', sa.String(length=255), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('revoked', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_refresh_tokens_jti'), 'refresh_tokens', ['jti'], unique=True)
    op.create_index(op.f('ix_refresh_tokens_user_id'), 'refresh_tokens', ['user_id'], unique=False)
    op.create_index('ix_refresh_user_valid', 'refresh_tokens', ['user_id', 'revoked'], unique=False)
    op.create_table('wallet_ledger',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('entry_type', sa.Enum('deposit', 'withdrawal', 'charge', 'payout', 'refund', 'adjust', name='ledgerentrytype'), nullable=False),
    sa.Column('amount', sa.Numeric(precision=18, scale=2), nullable=False),
    sa.Column('reference', sa.String(length=64), nullable=True),
    sa.Column('meta', sa.JSON(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_wallet_ledger_entry_type'), 'wallet_ledger', ['entry_type'], unique=False)
    op.create_index(op.f('ix_wallet_ledger_reference'), 'wallet_ledger', ['reference'], unique=False)
    op.create_index('ix_wallet_ledger_user_created', 'wallet_ledger', ['user_id', sa.literal_column('created_at DESC')], unique=False)
    op.create_index(op.f('ix_wallet_ledger_user_id'), 'wallet_ledger', ['user_id'], unique=False)
    op.create_table('wallets',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('balance_kobo', sa.Integer(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_wallets_user_id'), 'wallets', ['user_id'], unique=True)
    op.create_table('complaints',
    sa.Column('job_id', sa.UUID(), nullable=True),
    sa.Column('raised_by_id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=120), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('status', sa.Enum('open', 'resolved', name='complaint_status'), nullable=False),
    sa.Column('resolved_by_admin_id', sa.UUID(), nullable=True),
    sa.Column('resolution_notes', sa.Text(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['raised_by_id'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['resolved_by_admin_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_complaints_job_id'), 'complaints', ['job_id'], unique=False)
    op.create_index(op.f('ix_complaints_raised_by_id'), 'complaints', ['raised_by_id'], unique=False)
    op.create_table('disputes',
    sa.Column('job_id', sa.UUID(), nullable=False),
    sa.Column('opened_by_id', sa.UUID(), nullable=False),
    sa.Column('reason', sa.Text(), nullable=False),
    sa.Column('status', sa.Enum('open', 'resolved', name='dispute_status'), nullable=False),
    sa.Column('resolved_by_admin_id', sa.UUID(), nullable=True),
    sa.Column('resolution_notes', sa.Text(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['opened_by_id'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['resolved_by_admin_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_disputes_job_id'), 'disputes', ['job_id'], unique=False)
    op.create_index(op.f('ix_disputes_opened_by_id'), 'disputes', ['opened_by_id'], unique=False)
    op.create_table('job_notes',
    sa.Column('job_id', sa.UUID(), nullable=False),
    sa.Column('author_id', sa.UUID(), nullable=False),
    sa.Column('note', sa.Text(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_job_notes_job_id'), 'job_notes', ['job_id'], unique=False)
    op.create_table('job_photos',
    sa.Column('job_id', sa.UUID(), nullable=False),
    sa.Column('path', sa.String(length=255), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_job_photos_job_id'), 'job_photos', ['job_id'], unique=False)
    op.create_table('job_status_history',
    sa.Column('job_id', sa.UUID(), nullable=False),
    sa.Column('old_status', sa.Enum('pending', 'accepted', 'on_the_way', 'working', 'completed', 'cancelled', name='job_status'), nullable=True),
    sa.Column('new_status', sa.Enum('pending', 'accepted', 'on_the_way', 'working', 'completed', 'cancelled', name='job_status'), nullable=False),
    sa.Column('changed_by_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['changed_by_id'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_job_status_history_job_id'), 'job_status_history', ['job_id'], unique=False)
    op.create_table('reviews',
    sa.Column('job_id', sa.UUID(), nullable=False),
    sa.Column('customer_id', sa.UUID(), nullable=False),
    sa.Column('artisan_id', sa.UUID(), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=False),
    sa.Column('review', sa.Text(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['artisan_id'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['customer_id'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('job_id', 'customer_id', name='uq_review_one_per_job_by_customer')
    )
    op.create_index(op.f('ix_reviews_artisan_id'), 'reviews', ['artisan_id'], unique=False)
    op.create_index(op.f('ix_reviews_customer_id'), 'reviews', ['customer_id'], unique=False)
    op.create_index(op.f('ix_reviews_job_id'), 'reviews', ['job_id'], unique=False)
    op.create_table('transactions',
    sa.Column('wallet_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('amount_kobo', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('deposit', 'withdrawal', 'payment', 'refund', name='transaction_type'), nullable=False),
    sa.Column('status', sa.Enum('pending', 'success', 'failed', name='transaction_status'), nullable=False),
    sa.Column('reference', sa.String(length=64), nullable=False),
    sa.Column('related_job_id', sa.UUID(), nullable=True),
    sa.Column('meta', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['related_job_id'], ['jobs.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['wallet_id'], ['wallets.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('reference', name='uq_transactions_reference')
    )
    op.create_index(op.f('ix_transactions_reference'), 'transactions', ['reference'], unique=False)
    op.create_index(op.f('ix_transactions_status'), 'transactions', ['status'], unique=False)
    op.create_index(op.f('ix_transactions_type'), 'transactions', ['type'], unique=False)
    op.create_index(op.f('ix_transactions_user_id'), 'transactions', ['user_id'], unique=False)
    op.create_index('ix_transactions_user_type', 'transactions', ['user_id', 'type'], unique=False)
    op.create_index(op.f('ix_transactions_wallet_id'), 'transactions', ['wallet_id'], unique=False)
    op.create_table('payments',
    sa.Column('job_id', sa.UUID(), nullable=True),
    sa.Column('customer_id', sa.UUID(), nullable=False),
    sa.Column('artisan_id', sa.UUID(), nullable=True),
    sa.Column('amount', sa.Numeric(precision=18, scale=2), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('method', sa.Enum('card', 'wallet', 'bank_transfer', name='paymentmethod'), nullable=False),
    sa.Column('status', sa.Enum('initiated', 'authorized', 'captured', 'failed', 'refunded', 'cancelled', name='paymentstatus'), nullable=False),
    sa.Column('reference', sa.String(length=64), nullable=False),
    sa.Column('transaction_id', sa.UUID(), nullable=True),
    sa.Column('provider', sa.String(length=32), nullable=True),
    sa.Column('provider_ref', sa.String(length=64), nullable=True),
    sa.Column('signature_verified', sa.Boolean(), nullable=False),
    sa.Column('meta', sa.JSON(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['artisan_id'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['customer_id'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['transaction_id'], ['transactions.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('reference', name='uq_payments_reference')
    )
    op.create_index(op.f('ix_payments_artisan_id'), 'payments', ['artisan_id'], unique=False)
    op.create_index(op.f('ix_payments_customer_id'), 'payments', ['customer_id'], unique=False)
    op.create_index(op.f('ix_payments_job_id'), 'payments', ['job_id'], unique=False)
    op.create_index(op.f('ix_payments_method'), 'payments', ['method'], unique=False)
    op.create_index(op.f('ix_payments_provider_ref'), 'payments', ['provider_ref'], unique=False)
    op.create_index(op.f('ix_payments_reference'), 'payments', ['reference'], unique=False)
    op.create_index(op.f('ix_payments_status'), 'payments', ['status'], unique=False)
    op.create_index(op.f('ix_payments_transaction_id'), 'payments', ['transaction_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_payments_transaction_id'), table_name='payments')
    op.drop_index(op.f('ix_payments_status'), table_name='payments')
    op.drop_index(op.f('ix_payments_reference'), table_name='payments')
    op.drop_index(op.f('ix_payments_provider_ref'), table_name='payments')
    op.drop_index(op.f('ix_payments_method'), table_name='payments')
    op.drop_index(op.f('ix_payments_job_id'), table_name='payments')
    op.drop_index(op.f('ix_payments_customer_id'), table_name='payments')
    op.drop_index(op.f('ix_payments_artisan_id'), table_name='payments')
    op.drop_table('payments')
    op.drop_index(op.f('ix_transactions_wallet_id'), table_name='transactions')
    op.drop_index('ix_transactions_user_type', table_name='transactions')
    op.drop_index(op.f('ix_transactions_user_id'), table_name='transactions')
    op.drop_index(op.f('ix_transactions_type'), table_name='transactions')
    op.drop_index(op.f('ix_transactions_status'), table_name='transactions')
    op.drop_index(op.f('ix_transactions_reference'), table_name='transactions')
    op.drop_table('transactions')
    op.drop_index(op.f('ix_reviews_job_id'), table_name='reviews')
    op.drop_index(op.f('ix_reviews_customer_id'), table_name='reviews')
    op.drop_index(op.f('ix_reviews_artisan_id'), table_name='reviews')
    op.drop_table('reviews')
    op.drop_index(op.f('ix_job_status_history_job_id'), table_name='job_status_history')
    op.drop_table('job_status_history')
    op.drop_index(op.f('ix_job_photos_job_id'), table_name='job_photos')
    op.drop_table('job_photos')
    op.drop_index(op.f('ix_job_notes_job_id'), table_name='job_notes')
    op.drop_table('job_notes')
    op.drop_index(op.f('ix_disputes_opened_by_id'), table_name='disputes')
    op.drop_index(op.f('ix_disputes_job_id'), table_name='disputes')
    op.drop_table('disputes')
    op.drop_index(op.f('ix_complaints_raised_by_id'), table_name='complaints')
    op.drop_index(op.f('ix_complaints_job_id'), table_name='complaints')
    op.drop_table('complaints')
    op.drop_index(op.f('ix_wallets_user_id'), table_name='wallets')
    op.drop_table('wallets')
    op.drop_index(op.f('ix_wallet_ledger_user_id'), table_name='wallet_ledger')
    op.drop_index('ix_wallet_ledger_user_created', table_name='wallet_ledger')
    op.drop_index(op.f('ix_wallet_ledger_reference'), table_name='wallet_ledger')
    op.drop_index(op.f('ix_wallet_ledger_entry_type'), table_name='wallet_ledger')
    op.drop_table('wallet_ledger')
    op.drop_index('ix_refresh_user_valid', table_name='refresh_tokens')
    op.drop_index(op.f('ix_refresh_tokens_user_id'), table_name='refresh_tokens')
    op.drop_index(op.f('ix_refresh_tokens_jti'), table_name='refresh_tokens')
    op.drop_table('refresh_tokens')
    op.drop_index(op.f('ix_jobs_status'), table_name='jobs')
    op.drop_index(op.f('ix_jobs_service_category'), table_name='jobs')
    op.drop_index(op.f('ix_jobs_job_number'), table_name='jobs')
    op.drop_index('ix_jobs_customer_status', table_name='jobs')
    op.drop_index(op.f('ix_jobs_customer_id'), table_name='jobs')
    op.drop_index('ix_jobs_artisan_status', table_name='jobs')
    op.drop_index(op.f('ix_jobs_artisan_id'), table_name='jobs')
    op.drop_table('jobs')
    op.drop_index(op.f('ix_idempotency_keys_user_id'), table_name='idempotency_keys')
    op.drop_index(op.f('ix_idempotency_keys_scope'), table_name='idempotency_keys')
    op.drop_table('idempotency_keys')
    op.drop_index(op.f('ix_email_phone_tokens_user_id'), table_name='email_phone_tokens')
    op.drop_index(op.f('ix_email_phone_tokens_purpose'), table_name='email_phone_tokens')
    op.drop_table('email_phone_tokens')
    op.drop_index(op.f('ix_artisan_profiles_verification_status'), table_name='artisan_profiles')
    op.drop_index(op.f('ix_artisan_profiles_user_id'), table_name='artisan_profiles')
    op.drop_index(op.f('ix_artisan_profiles_service_category'), table_name='artisan_profiles')
    op.drop_table('artisan_profiles')
    op.drop_table('announcements')
    op.drop_index(op.f('ix_users_role'), table_name='users')
    op.drop_index(op.f('ix_users_phone_number'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_service_categories_name'), table_name='service_categories')
    op.drop_table('service_categories')
    # ### end Alembic commands ###
